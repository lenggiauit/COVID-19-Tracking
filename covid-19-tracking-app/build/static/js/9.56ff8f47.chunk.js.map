{"version":3,"sources":["components/pageNotFound/index.tsx","components/byRegion/detailLoading.tsx","components/byCountry/detail.tsx","views/country/index.tsx"],"names":["PageNotFound","className","tid","DetailLoading","lineCount","Array","from","keys","map","i","as","animation","xs","bg","GetRandomBgColor","size","uuid","CountryDetail","selectedItemData","locale","useAppContext","start","Date","setDate","getDate","defaultPayload","countryCode","startDate","endDate","selectedHandler","type","setMonth","getMonth","setFullYear","getFullYear","payload","setPayload","useState","useGetDetailByCountryQuery","data","error","isFetching","isLoading","md","style","cursor","svg","width","height","title","countriesData","filter","c","code","name","JSON","stringify","success","resource","covidReport","confirmed","toLocaleString","undefined","maximumFractionDigits","deaths","toFixed","fontSize","today","latestMeasures","MEASURES_IN_PLACE","MASKS__1","TRAVEL__1","GATHERINGS__1","SCHOOLS__1","BUSINESSES__1","MOVEMENTS__1","role","id","onClick","htmlFor","labels","covidReportByDay","reportDate","toLocaleDateString","datasets","label","dictionaryList","totalConfirmed","fill","borderColor","totalDeaths","Country","state","setLocale","appSetting","useLocation"],"mappings":"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","file":"static/js/9.56ff8f47.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport * as bt from 'react-bootstrap';\r\nimport Navigation from '../../components/navigation/'\r\nimport { AppProvider } from '../../contexts/appContext';\r\nimport EnvironmentInfo from '../environmentInfo';\r\nimport { Translation } from '../translation';\r\n\r\n\r\nconst PageNotFound: React.FC = (): ReactElement => {\r\n    return (\r\n        <>\r\n            <div className=\"px-4 py-5 my-5 text-center\">\r\n                <h1 className=\"mt-5\"><Translation tid=\"page_not_found\" /></h1>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PageNotFound;\r\n\r\n","import React from 'react';\r\nimport { Placeholder } from 'react-bootstrap';\r\nimport { GetRandomBgColor } from '../../utils/functions';\r\nimport { uuid } from 'uuidv4';\r\n\r\ntype Props = {\r\n    lineCount?: number;\r\n}\r\nconst DetailLoading: React.FC<Props> = ({ lineCount }) => {\r\n    return (\r\n        <>{\r\n            Array.from(Array(lineCount != null ? lineCount : 1).keys()).map((i) => (\r\n                <Placeholder key={uuid()} as=\"p\" animation=\"glow\">\r\n                    <Placeholder key={uuid()} xs={12} bg={GetRandomBgColor()} size=\"xs\" />\r\n                </Placeholder>\r\n            ))\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailLoading;","import React, { useRef, useState } from 'react';\r\nimport { Translation } from '../translation';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { dictionaryList, localeOptions } from '../../locales';\r\nimport { useAppContext } from '../../contexts/appContext';\r\nimport { uuid } from 'uuidv4';\r\nimport * as bt from 'react-bootstrap';\r\nimport DetailLoading from '../byRegion/detailLoading';\r\nimport { useGetDetailByCountryQuery } from '../../services/getDetailByCountry';\r\nimport { Covid19DataByCountry, DetailByCountryRequest } from '../../types/covid19DataByCountry';\r\n//@ts-ignore\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport countriesData from \"../../locales/countries.json\";\r\n\r\ntype Props = {\r\n    selectedItemData: Covid19DataByCountry;\r\n}\r\n\r\nconst CountryDetail: React.FC<Props> = ({ selectedItemData }) => {\r\n    const { locale, } = useAppContext();\r\n\r\n    let start = new Date();\r\n    start.setDate(new Date().getDate() - 7)\r\n    const defaultPayload = {\r\n        countryCode: selectedItemData.countryCode,\r\n        startDate: start,\r\n        endDate: new Date(),\r\n    };\r\n\r\n    const selectedHandler = (type: string) => {\r\n        let start = new Date();\r\n        switch (type) {\r\n            case \"Weekly\":\r\n                start.setDate(new Date().getDate() - 7)\r\n                break;\r\n            case \"Monthly\":\r\n                start.setMonth(new Date().getMonth() - 1)\r\n                break;\r\n            case \"Yearly\":\r\n                start.setFullYear(new Date().getFullYear() - 1)\r\n                break;\r\n        }\r\n        const payload = {\r\n            countryCode: selectedItemData.countryCode,\r\n            startDate: start,\r\n            endDate: new Date(),\r\n        };\r\n        setPayload(payload);\r\n    };\r\n\r\n    const [payload, setPayload] = useState<DetailByCountryRequest>(defaultPayload);\r\n    const { data, error, isFetching, isLoading } = useGetDetailByCountryQuery({ payload: payload });\r\n\r\n    return (\r\n        <>\r\n            {selectedItemData && (\r\n                <bt.Container>\r\n                    <bt.Row>\r\n                        <bt.Col md={12} >\r\n                            <div className=\"d-flex justify-content-between p-3 my-3 text-white bg-info rounded shadow-sm\" style={{ cursor: \"pointer\" }}\r\n                            >\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <ReactCountryFlag className=\"emojiFlag\"\r\n                                        svg\r\n                                        style={{\r\n                                            width: '3em',\r\n                                            height: '3em',\r\n                                        }}\r\n                                        title={countriesData.filter(c => c.code == selectedItemData.countryCode)[0]?.name}\r\n                                        countryCode={selectedItemData.countryCode} />&nbsp;\r\n\r\n\r\n                                    <div className=\"lh-1  ml-3\">\r\n                                        <h1 className=\"h4 mb-0 text-white lh-1\">{countriesData.filter(c => c.code == selectedItemData.countryCode)[0]?.name}</h1>\r\n                                    </div>\r\n                                </div>\r\n                                {(isFetching || isLoading) && <DetailLoading key={uuid()} lineCount={16} />}\r\n                                {error && <div>{JSON.stringify(error)}</div>}\r\n                                {!error && !isFetching && data?.success && data?.resource != null &&\r\n                                    <>\r\n                                        <div>\r\n                                            <b><span className=\"text-warning\">\r\n                                                {data.resource.covidReport.confirmed.toLocaleString(undefined, { maximumFractionDigits: 0 })} </span>\r\n                                                /\r\n                                                <span className=\"text-danger\"> {data.resource.covidReport.deaths.toLocaleString(undefined, { maximumFractionDigits: 0 })}</span>&nbsp;\r\n                                                (<span>{((data.resource.covidReport.deaths / data.resource.covidReport.confirmed) * 100).toFixed(2)} %</span>)\r\n                                            </b>\r\n                                            <div>\r\n                                                &nbsp;\r\n                                                <small style={{ fontSize: 12 }}>\r\n                                                    <Translation tid=\"Confirmed\" /> / <Translation tid=\"Deaths\" />\r\n                                                </small >\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </bt.Col>\r\n\r\n                    </bt.Row>\r\n                    <hr />\r\n                    <bt.Row>\r\n                        <bt.Col md={12} >\r\n\r\n                            {(isFetching || isLoading) && <DetailLoading key={uuid()} lineCount={16} />}\r\n                            {error && <div>{JSON.stringify(error)}</div>}\r\n                            {!error && !isFetching && data?.success && data?.resource != null &&\r\n                                <>\r\n                                    <div>\r\n                                        <label><b><Translation tid=\"Today\"></Translation> <Translation tid=\"Confirmed\" /></b>:</label><b className=\"text-warning\"> {data.resource.today?.confirmed.toLocaleString(undefined, { maximumFractionDigits: 0 })}</b>\r\n                                        <br />\r\n                                        <label><b><Translation tid=\"Today\"></Translation> <Translation tid=\"Deaths\" /></b>:</label> <b className=\"text-danger\">{data.resource.today?.deaths.toLocaleString(undefined, { maximumFractionDigits: 0 })}</b>\r\n                                    </div>\r\n                                    <br />\r\n                                    <div>\r\n                                        <h4> <Translation tid=\"WarningMessage\" /></h4>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label><b><Translation tid=\"MEASURES_IN_PLACE\" /></b>:</label> {data.resource.covidReport.latestMeasures?.MEASURES_IN_PLACE}\r\n                                            </li>\r\n                                            <li>\r\n                                                <label><b><Translation tid=\"MASKS__1\" /></b>:</label> {data.resource.covidReport.latestMeasures?.MASKS__1}\r\n                                            </li>\r\n                                            <li>\r\n                                                <label><b><Translation tid=\"TRAVEL__1\" /></b>:</label> {data.resource.covidReport.latestMeasures?.TRAVEL__1}\r\n                                            </li>\r\n                                            <li>\r\n                                                <label><b><Translation tid=\"GATHERINGS__1\" /></b>:</label> {data.resource.covidReport.latestMeasures?.GATHERINGS__1}\r\n                                            </li>\r\n                                            <li>\r\n                                                <label><b><Translation tid=\"SCHOOLS__1\" /></b>:</label> {data.resource.covidReport.latestMeasures?.SCHOOLS__1}\r\n                                            </li>\r\n                                            <li>\r\n                                                <label><b><Translation tid=\"BUSINESSES__1\" /></b>:</label> {data.resource.covidReport.latestMeasures?.BUSINESSES__1}\r\n                                            </li>\r\n                                            <li>\r\n                                                <label><b><Translation tid=\"MOVEMENTS__1\" /></b>:</label> {data.resource.covidReport.latestMeasures?.MOVEMENTS__1}\r\n                                            </li>\r\n\r\n                                        </ul>\r\n\r\n                                    </div>\r\n\r\n                                    <br />\r\n                                    <div className=\"position-relative\">\r\n                                        <div className=\"float-right\" style={{ width: 200 }}>\r\n                                            <div className=\"btn-group btn-group-sm\" role=\"group\"  >\r\n                                                <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio1\" onClick={() => { selectedHandler('Weekly') }} />\r\n                                                <label className=\"btn btn-outline-primary\" htmlFor=\"btnradio1\">Weekly</label>\r\n\r\n                                                <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" onClick={() => { selectedHandler('Monthly') }} />\r\n                                                <label className=\"btn btn-outline-primary\" htmlFor=\"btnradio2\">Monthly</label>\r\n\r\n                                                <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio3\" onClick={() => { selectedHandler('Yearly') }} />\r\n                                                <label className=\"btn btn-outline-primary\" htmlFor=\"btnradio3\">Yearly</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"position-relative\">\r\n                                        <div className=\"text-center\" >\r\n                                            <div style={{ width: \"100%\", height: 420 }}>\r\n                                                <Line data={{\r\n                                                    labels: data.resource.covidReportByDay.map((i) => new Date(i.reportDate).toLocaleDateString(locale)),\r\n                                                    datasets: [\r\n                                                        {\r\n                                                            label: dictionaryList[locale][\"Confirmed\"],\r\n                                                            data: data.resource.covidReportByDay.map((i) => i.totalConfirmed),\r\n                                                            fill: false,\r\n                                                            borderColor: \"#f7c50c\"\r\n                                                        },\r\n                                                        {\r\n                                                            label: dictionaryList[locale][\"Deaths\"],\r\n                                                            data: data.resource.covidReportByDay.map((i) => i.totalDeaths),\r\n                                                            fill: false,\r\n                                                            borderColor: \"#f70c0c\"\r\n                                                        }\r\n                                                    ]\r\n                                                }} key={uuid()} />\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </bt.Col>\r\n                    </bt.Row>\r\n\r\n                </bt.Container>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CountryDetail;","import React, { ReactElement, useState } from 'react';\r\nimport * as bt from 'react-bootstrap';\r\nimport Layout from '../../components/layout';\r\nimport { useAppContext } from '../../contexts/appContext';\r\nimport { currentCountry } from '../../components/byCountry/selectedCountrySlice';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { Covid19DataByCountry } from '../../types/covid19DataByCountry';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PageNotFound from '../../components/pageNotFound';\r\nimport CountryDetail from '../../components/byCountry/detail';\r\n\r\nconst Country: React.FC = (): ReactElement => {\r\n    const { locale, setLocale, appSetting } = useAppContext();\r\n    const { state } = useLocation<Covid19DataByCountry>();\r\n    if (state) {\r\n        return (\r\n            <Layout>\r\n                <bt.Container>\r\n                    <bt.Row>\r\n                        <CountryDetail selectedItemData={state} />\r\n                    </bt.Row>\r\n                </bt.Container>\r\n            </Layout>\r\n        )\r\n    } else {\r\n        return (\r\n            <Layout>\r\n                <PageNotFound />\r\n            </Layout>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Country;"],"sourceRoot":""}